<!-- Copy button! -->
<!-- Use to copy text -->
{% macro copy(textToCopy = "welcome", initialText = "(copy)", activeText = "copied", class="link p" ) %}
<button
  x-data="{
    isSwitched: false,
    buttonText: `{{ initialText }}`,
    switchLabel(ms = 4000) {
      // switch the label of the button for a specific amount of time
      this.isSwitched = true
      this.buttonText = `{{ activeText }}`

      // flip switch
      setTimeout(() => {
        this.isSwitched = false
        this.buttonText = `{{ initialText }}`
      }, ms);
    },
    copy(textToCopy, labelMs) {
      if (this.isSwitched) return

      navigator.clipboard.writeText(textToCopy);
      this.switchLabel()
    },
  }"
  x-on:click="copy(`{{ textToCopy }}`)"
  class="{{ class }}"
>
  <span class="flex items-center" :class="isSwitched ? 'text-green-400 dark:text-green-700' : ''">
    <!-- <template x-if="isSwitched">
      <span class="mr-0.5">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4">
          <path
            fill-rule="evenodd"
            d="M16.403 12.652a3 3 0 000-5.304 3 3 0 00-3.75-3.751 3 3 0 00-5.305 0 3 3 0 00-3.751 3.75 3 3 0 000 5.305 3 3 0 003.75 3.751 3 3 0 005.305 0 3 3 0 003.751-3.75zm-2.546-4.46a.75.75 0 00-1.214-.883l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
            clip-rule="evenodd"
          />
        </svg>
      </span>
    </template> -->
    <span x-text="buttonText"></span>
  </span>
</button>
{% endmacro %}
